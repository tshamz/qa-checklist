/*! normalize.css v1.1.3 | MIT License | git.io/normalize */*,::after,::before,:after,:before{box-sizing:inherit}body,html{overflow-x:hidden}audio,body,canvas,video{display:inline-block}body,button,dl,figure,form,h1,h2,h3,h4,h5,h6,html,menu,ol,p,ul{margin:0}.checklist-heading,body,sub,sup{position:relative}body,h2{background-color:#fefffa}.accordion,nav ol,nav ul,ul{list-style:none}.google-visualization-table-table,table{border-collapse:collapse;border-spacing:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio:not([controls]){display:none;height:0}[hidden]{display:none}button,html,input,select,textarea{font-family:sans-serif}a,a:-webkit-any-link{cursor:auto;text-decoration:underline;color:#00f}a:focus{outline:dotted thin}a:active,a:hover,input{outline:0}h3{font-size:1.17em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.67em}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}blockquote{margin:1em 40px}dfn{font-style:italic}hr{box-sizing:content-box;height:0}mark{background:#ff0;color:#000}pre{margin:1em 0;white-space:pre;white-space:pre-wrap;word-wrap:break-word}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}q{quotes:none}q:after,q:before{content:'';content:none}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}dl,menu,ol,ul{padding:0}dd{margin:0 0 0 40px}img{border:0;-ms-interpolation-mode:bicubic;height:auto;max-width:100%}svg:not(:root){overflow:hidden}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button{color:inherit;-webkit-appearance:none!important;background-color:transparent;border:none;padding:0}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}body,html{padding:0}html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;width:100%;height:100%;box-sizing:border-box;overflow-y:scroll;background-color:#dce7eb;color:rgba(48,69,92,.8);font-family:"Titillium Web",sans-serif;font-size:100%;font-style:normal;font-variant:normal;font-weight:400;line-height:1.5}body{min-height:0;min-width:20pc;left:50%;margin:45px auto;padding:30px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);box-shadow:0 10px 0 0 #ff6873 inset;font-size:1pc;font-smoothing:antialiased}ul{padding:0}input:focus::-webkit-input-placeholder{color:transparent!important}input:focus:-moz-placeholder{color:transparent!important}input:focus::-moz-placeholder{color:transparent!important}input:focus:-ms-input-placeholder{color:transparent!important}.accordion li.accordion-group i:after,.accordion li.accordion-group i:before,.checklist-group,.inner-checklist,.transition{-webkit-transition:all .25s ease-in-out;transition:all .25s ease-in-out}.flipIn{-webkit-animation:flipdown .5s ease both;animation:flipdown .5s ease both}.no-select,h2{-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@-webkit-keyframes flipdown{0%{opacity:0;-webkit-transform-origin:top center;transform-origin:top center;-webkit-transform:rotateX(-90deg);transform:rotateX(-90deg)}5%{opacity:1}80%{-webkit-transform:rotateX(8deg);transform:rotateX(8deg)}83%{-webkit-transform:rotateX(6deg);transform:rotateX(6deg)}92%{-webkit-transform:rotateX(-3deg);transform:rotateX(-3deg)}100%{-webkit-transform-origin:top center;transform-origin:top center;-webkit-transform:rotateX(0);transform:rotateX(0)}}@keyframes flipdown{0%{opacity:0;-webkit-transform-origin:top center;transform-origin:top center;-webkit-transform:rotateX(-90deg);transform:rotateX(-90deg)}5%{opacity:1}80%{-webkit-transform:rotateX(8deg);transform:rotateX(8deg)}83%{-webkit-transform:rotateX(6deg);transform:rotateX(6deg)}92%{-webkit-transform:rotateX(-3deg);transform:rotateX(-3deg)}100%{-webkit-transform-origin:top center;transform-origin:top center;-webkit-transform:rotateX(0);transform:rotateX(0)}}.checklist-container,.checklist-heading{width:100%;max-width:60rem;margin:0 auto;padding-left:2rem}h1,h2{color:#ff6873}h1{text-transform:uppercase;font-size:36px;line-height:42px;letter-spacing:3px;font-weight:100;padding-bottom:1pc}h2{font-size:26px;line-height:34px;font-weight:300;letter-spacing:1px;display:block;margin:0;cursor:pointer}.toggle-all{position:absolute;right:0;bottom:10px}.accordion{padding:0;margin:0}.accordion li.accordion-group{position:relative;padding:18px 0;margin:0;border-top:1px dotted #dce7eb}.accordion li.accordion-group:nth-of-type(1){-webkit-animation-delay:.5s;animation-delay:.5s}.accordion li.accordion-group:nth-of-type(2){-webkit-animation-delay:.75s;animation-delay:.75s}.accordion li.accordion-group:nth-of-type(3){-webkit-animation-delay:1s;animation-delay:1s}.accordion li.accordion-group:last-of-type{padding-bottom:0}.accordion li.accordion-group i{position:absolute;-webkit-transform:translate(-6px,0);transform:translate(-6px,0);margin-top:1pc;right:0}.accordion li.accordion-group i:after,.accordion li.accordion-group i:before{content:"";position:absolute;background-color:#ff6873;width:3px;height:9px}.accordion li.accordion-group i:before{-webkit-transform:translate(-2px,0) rotate(45deg);transform:translate(-2px,0) rotate(45deg)}.accordion li.accordion-group i:after{-webkit-transform:translate(2px,0) rotate(-45deg);transform:translate(2px,0) rotate(-45deg)}.accordion li.accordion-group>input[type=checkbox].accordion-control{position:absolute;cursor:pointer;width:100%;height:100%;z-index:1;opacity:0}.accordion li.accordion-group>input[type=checkbox].accordion-control:checked~.checklist-group{margin-top:0;max-height:0;opacity:0;-webkit-transform:translate(0,50%);transform:translate(0,50%)}.checklist-group,.inner-checklist{color:rgba(48,69,92,.8);font-size:17px;line-height:26px;letter-spacing:1px;overflow:hidden;opacity:1;margin-top:14px;z-index:2;position:relative}.accordion li.accordion-group>input[type=checkbox].accordion-control:checked~i:before{-webkit-transform:translate(2px,0) rotate(45deg);transform:translate(2px,0) rotate(45deg)}.accordion li.accordion-group>input[type=checkbox].accordion-control:checked~i:after{-webkit-transform:translate(-2px,0) rotate(-45deg);transform:translate(-2px,0) rotate(-45deg)}.inner-checklist{max-height:50pc;-webkit-transform:translate(0,0);transform:translate(0,0)}.checklist-group{max-height:100pc;-webkit-transform:translate(0,0);transform:translate(0,0)}.checklist-input-group{position:relative;font-size:24px;font-weight:300}.checklist-input-group input[type=checkbox]{position:absolute;top:0;left:0;border:none;display:block;height:40px;width:40px;margin:15px 0;outline:0;padding:0;text-align:center;-webkit-appearance:none;-moz-appearance:none;appearance:none}.checklist-input-group label{padding:15px 60px 15px 15px;margin-left:45px;display:block;line-height:1.2;-webkit-transition:color .4s;transition:color .4s}.checklist-input-group input[type=checkbox]:after{content:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="-10 -18 100 135"><circle cx="50" cy="50" r="50" fill="none" stroke="#dddddd" stroke-width="3"/></svg>')}.checklist-input-group input[type=checkbox]:checked:after{content:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="-10 -18 100 135"><circle cx="50" cy="50" r="50" fill="none" stroke="#bbbbbb" stroke-width="3"/><path fill="#5dc2af" d="M72 25L42 71 27 56l-4 4 20 20 34-52z"/></svg>')}.google-analytics-integration{padding-top:20px}.google-analytics-integration .account-property-profile-container{display:none;padding-top:10px;padding-left:25px}.google-analytics-integration .account-property-profile-container .select-label{display:inline-block;width:115px}.google-analytics-integration .account-property-profile-container .ga-select{width:275px}.google-analytics-integration .visualization-table-container{display:none;padding-top:20px}.google-analytics-integration textarea{width:100%}.google-analytics-authorize{padding:5px 10px;background-color:#fff;border:1px solid #bbb;border-radius:3px}.google-visualization-table-table{background:#fff;font:inherit;cursor:default;width:100%!important;margin:0 0 15px}.google-visualization-table-table *{font:inherit;vertical-align:inherit;margin:0}.gapi-analytics-data-chart-styles-table-tr-head{background:#F7F7F6}.gapi-analytics-data-chart-styles-table-th{border-bottom:1px solid #ddd;border-top:1px solid #ddd;white-space:nowrap;font-weight:700;padding:.6em 1em;text-align:left}.gapi-analytics-data-chart-styles-table-th:first-child{border-left:1px solid #ddd}.gapi-analytics-data-chart-styles-table-th:last-child{border-right:1px solid #ddd}.gapi-analytics-data-chart-styles-table-td{border:0;border-left:1px solid #e8e8e8;padding:.6em 1em}.gapi-analytics-data-chart-styles-table-td:first-child{border-left:0}.google-visualization-table-table tbody tr.odd{background-color:#F8F7F5}
/*# sourceMappingURL=data:application/json;base64, */